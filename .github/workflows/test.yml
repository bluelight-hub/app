name: Tests

on:
  push:
    branches: [ main, develop, feature/*, alpha, beta, release/* ]
  pull_request:
    branches: [ main, develop, feature/*, alpha, beta, release/* ]

# Konfiguration für Abbruch laufender Tests bei neuem Push
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Erforderliche Berechtigungen für GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '10.3.0'
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Run coverage tests
        run: pnpm test:cov
        
      - name: Create merged coverage report
        run: |
          mkdir -p coverage-report
          cp -r packages/*/coverage/lcov-report/* coverage-report/
          # Create an index page that links to each package's coverage
          echo "<html><head><title>Coverage Reports</title></head><body>" > coverage-report/index.html
          echo "<h1>Coverage Reports</h1><ul>" >> coverage-report/index.html
          for dir in packages/*/coverage/lcov-report; do
            pkgname=$(echo $dir | cut -d/ -f2)
            echo "<li><a href='./$pkgname/'>$pkgname</a></li>" >> coverage-report/index.html
          done
          echo "</ul></body></html>" >> coverage-report/index.html
      
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage-report/
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: coverage-report/
          
  deploy:
    # nur ausführen, wenn auf main gemergt wurde oder ggf. auf andere permanente Branches
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/alpha')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 