/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SessionActivityDto } from './SessionActivityDto';
import {
  SessionActivityDtoFromJSON,
  SessionActivityDtoFromJSONTyped,
  SessionActivityDtoToJSON,
  SessionActivityDtoToJSONTyped,
} from './SessionActivityDto';

/**
 *
 * @export
 * @interface SessionStatisticsDto
 */
export interface SessionStatisticsDto {
  /**
   * Gesamtanzahl aller Sessions
   * @type {number}
   * @memberof SessionStatisticsDto
   */
  totalSessions: number;
  /**
   * Anzahl aktiver Sessions
   * @type {number}
   * @memberof SessionStatisticsDto
   */
  activeSessions: number;
  /**
   * Anzahl widerrufener Sessions
   * @type {number}
   * @memberof SessionStatisticsDto
   */
  revokedSessions: number;
  /**
   * Anzahl hochriskanter Sessions
   * @type {number}
   * @memberof SessionStatisticsDto
   */
  highRiskSessions: number;
  /**
   * Verteilung nach Gerätetypen
   * @type {object}
   * @memberof SessionStatisticsDto
   */
  deviceTypeDistribution: object;
  /**
   * Verteilung nach Standorten
   * @type {object}
   * @memberof SessionStatisticsDto
   */
  locationDistribution: object;
  /**
   * Verteilung nach Browsern
   * @type {object}
   * @memberof SessionStatisticsDto
   */
  browserDistribution: object;
  /**
   * Verteilung nach Betriebssystemen
   * @type {object}
   * @memberof SessionStatisticsDto
   */
  osDistribution: object;
  /**
   * Liste der neuesten Aktivitäten
   * @type {Array<SessionActivityDto>}
   * @memberof SessionStatisticsDto
   */
  recentActivities: Array<SessionActivityDto>;
}

/**
 * Check if a given object implements the SessionStatisticsDto interface.
 */
export function instanceOfSessionStatisticsDto(value: object): value is SessionStatisticsDto {
  if (!('totalSessions' in value) || value['totalSessions'] === undefined) return false;
  if (!('activeSessions' in value) || value['activeSessions'] === undefined) return false;
  if (!('revokedSessions' in value) || value['revokedSessions'] === undefined) return false;
  if (!('highRiskSessions' in value) || value['highRiskSessions'] === undefined) return false;
  if (!('deviceTypeDistribution' in value) || value['deviceTypeDistribution'] === undefined)
    return false;
  if (!('locationDistribution' in value) || value['locationDistribution'] === undefined)
    return false;
  if (!('browserDistribution' in value) || value['browserDistribution'] === undefined) return false;
  if (!('osDistribution' in value) || value['osDistribution'] === undefined) return false;
  if (!('recentActivities' in value) || value['recentActivities'] === undefined) return false;
  return true;
}

export function SessionStatisticsDtoFromJSON(json: any): SessionStatisticsDto {
  return SessionStatisticsDtoFromJSONTyped(json, false);
}

export function SessionStatisticsDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SessionStatisticsDto {
  if (json == null) {
    return json;
  }
  return {
    totalSessions: json['totalSessions'],
    activeSessions: json['activeSessions'],
    revokedSessions: json['revokedSessions'],
    highRiskSessions: json['highRiskSessions'],
    deviceTypeDistribution: json['deviceTypeDistribution'],
    locationDistribution: json['locationDistribution'],
    browserDistribution: json['browserDistribution'],
    osDistribution: json['osDistribution'],
    recentActivities: (json['recentActivities'] as Array<any>).map(SessionActivityDtoFromJSON),
  };
}

export function SessionStatisticsDtoToJSON(json: any): SessionStatisticsDto {
  return SessionStatisticsDtoToJSONTyped(json, false);
}

export function SessionStatisticsDtoToJSONTyped(
  value?: SessionStatisticsDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    totalSessions: value['totalSessions'],
    activeSessions: value['activeSessions'],
    revokedSessions: value['revokedSessions'],
    highRiskSessions: value['highRiskSessions'],
    deviceTypeDistribution: value['deviceTypeDistribution'],
    locationDistribution: value['locationDistribution'],
    browserDistribution: value['browserDistribution'],
    osDistribution: value['osDistribution'],
    recentActivities: (value['recentActivities'] as Array<any>).map(SessionActivityDtoToJSON),
  };
}
