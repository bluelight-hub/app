/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface CreateThreatRuleDto
 */
export interface CreateThreatRuleDto {
  /**
   * Name der Regel zur eindeutigen Identifikation
   * @type {string}
   * @memberof CreateThreatRuleDto
   */
  name: string;
  /**
   * Ausf√ºhrliche Beschreibung der Regel und ihrer Funktion
   * @type {string}
   * @memberof CreateThreatRuleDto
   */
  description: string;
  /**
   * Schweregrad der erkannten Bedrohung
   * @type {string}
   * @memberof CreateThreatRuleDto
   */
  severity: CreateThreatRuleDtoSeverityEnum;
  /**
   * Art der Regel-Bedingung
   * @type {string}
   * @memberof CreateThreatRuleDto
   */
  conditionType: CreateThreatRuleDtoConditionTypeEnum;
  /**
   * Regel-spezifische Konfiguration
   * @type {object}
   * @memberof CreateThreatRuleDto
   */
  config: object;
  /**
   * Tags zur Kategorisierung und Filterung
   * @type {Array<string>}
   * @memberof CreateThreatRuleDto
   */
  tags: Array<string>;
}

/**
 * @export
 */
export const CreateThreatRuleDtoSeverityEnum = {
  Low: 'LOW',
  Medium: 'MEDIUM',
  High: 'HIGH',
  Critical: 'CRITICAL',
} as const;
export type CreateThreatRuleDtoSeverityEnum =
  (typeof CreateThreatRuleDtoSeverityEnum)[keyof typeof CreateThreatRuleDtoSeverityEnum];

/**
 * @export
 */
export const CreateThreatRuleDtoConditionTypeEnum = {
  Threshold: 'THRESHOLD',
  Pattern: 'PATTERN',
  Anomaly: 'ANOMALY',
  TimeBased: 'TIME_BASED',
  GeoBased: 'GEO_BASED',
} as const;
export type CreateThreatRuleDtoConditionTypeEnum =
  (typeof CreateThreatRuleDtoConditionTypeEnum)[keyof typeof CreateThreatRuleDtoConditionTypeEnum];

/**
 * Check if a given object implements the CreateThreatRuleDto interface.
 */
export function instanceOfCreateThreatRuleDto(value: object): value is CreateThreatRuleDto {
  if (!('name' in value) || value['name'] === undefined) return false;
  if (!('description' in value) || value['description'] === undefined) return false;
  if (!('severity' in value) || value['severity'] === undefined) return false;
  if (!('conditionType' in value) || value['conditionType'] === undefined) return false;
  if (!('config' in value) || value['config'] === undefined) return false;
  if (!('tags' in value) || value['tags'] === undefined) return false;
  return true;
}

export function CreateThreatRuleDtoFromJSON(json: any): CreateThreatRuleDto {
  return CreateThreatRuleDtoFromJSONTyped(json, false);
}

export function CreateThreatRuleDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateThreatRuleDto {
  if (json == null) {
    return json;
  }
  return {
    name: json['name'],
    description: json['description'],
    severity: json['severity'],
    conditionType: json['conditionType'],
    config: json['config'],
    tags: json['tags'],
  };
}

export function CreateThreatRuleDtoToJSON(json: any): CreateThreatRuleDto {
  return CreateThreatRuleDtoToJSONTyped(json, false);
}

export function CreateThreatRuleDtoToJSONTyped(
  value?: CreateThreatRuleDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    name: value['name'],
    description: value['description'],
    severity: value['severity'],
    conditionType: value['conditionType'],
    config: value['config'],
    tags: value['tags'],
  };
}
