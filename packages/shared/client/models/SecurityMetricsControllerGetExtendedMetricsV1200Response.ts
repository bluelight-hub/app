/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabase } from './SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabase';
import {
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabaseFromJSON,
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabaseFromJSONTyped,
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabaseToJSON,
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabaseToJSONTyped,
} from './SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabase';
import type { SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueue } from './SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueue';
import {
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueueFromJSON,
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueueFromJSONTyped,
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueueToJSON,
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueueToJSONTyped,
} from './SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueue';

/**
 *
 * @export
 * @interface SecurityMetricsControllerGetExtendedMetricsV1200Response
 */
export interface SecurityMetricsControllerGetExtendedMetricsV1200Response {
  /**
   * Prometheus formatted metrics
   * @type {string}
   * @memberof SecurityMetricsControllerGetExtendedMetricsV1200Response
   */
  prometheus?: string;
  /**
   *
   * @type {SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabase}
   * @memberof SecurityMetricsControllerGetExtendedMetricsV1200Response
   */
  database?: SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabase;
  /**
   *
   * @type {SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueue}
   * @memberof SecurityMetricsControllerGetExtendedMetricsV1200Response
   */
  queue?: SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueue;
  /**
   *
   * @type {Date}
   * @memberof SecurityMetricsControllerGetExtendedMetricsV1200Response
   */
  timestamp?: Date;
}

/**
 * Check if a given object implements the SecurityMetricsControllerGetExtendedMetricsV1200Response interface.
 */
export function instanceOfSecurityMetricsControllerGetExtendedMetricsV1200Response(
  value: object,
): value is SecurityMetricsControllerGetExtendedMetricsV1200Response {
  return true;
}

export function SecurityMetricsControllerGetExtendedMetricsV1200ResponseFromJSON(
  json: any,
): SecurityMetricsControllerGetExtendedMetricsV1200Response {
  return SecurityMetricsControllerGetExtendedMetricsV1200ResponseFromJSONTyped(json, false);
}

export function SecurityMetricsControllerGetExtendedMetricsV1200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SecurityMetricsControllerGetExtendedMetricsV1200Response {
  if (json == null) {
    return json;
  }
  return {
    prometheus: json['prometheus'] == null ? undefined : json['prometheus'],
    database:
      json['database'] == null
        ? undefined
        : SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabaseFromJSON(
            json['database'],
          ),
    queue:
      json['queue'] == null
        ? undefined
        : SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueueFromJSON(json['queue']),
    timestamp: json['timestamp'] == null ? undefined : new Date(json['timestamp']),
  };
}

export function SecurityMetricsControllerGetExtendedMetricsV1200ResponseToJSON(
  json: any,
): SecurityMetricsControllerGetExtendedMetricsV1200Response {
  return SecurityMetricsControllerGetExtendedMetricsV1200ResponseToJSONTyped(json, false);
}

export function SecurityMetricsControllerGetExtendedMetricsV1200ResponseToJSONTyped(
  value?: SecurityMetricsControllerGetExtendedMetricsV1200Response | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    prometheus: value['prometheus'],
    database: SecurityMetricsControllerGetExtendedMetricsV1200ResponseDatabaseToJSON(
      value['database'],
    ),
    queue: SecurityMetricsControllerGetExtendedMetricsV1200ResponseQueueToJSON(value['queue']),
    timestamp: value['timestamp'] == null ? undefined : value['timestamp'].toISOString(),
  };
}
