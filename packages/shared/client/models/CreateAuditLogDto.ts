/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface CreateAuditLogDto
 */
export interface CreateAuditLogDto {
  /**
   * Art der durchgeführten Aktion
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  actionType: CreateAuditLogDtoActionTypeEnum;
  /**
   * Schweregrad der Aktion
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  severity?: CreateAuditLogDtoSeverityEnum;
  /**
   * Spezifische Bezeichnung der Aktion
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  action: string;
  /**
   * Betroffene Ressource
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  resource: string;
  /**
   * ID der spezifischen Ressource
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  resourceId?: string;
  /**
   * ID des handelnden Benutzers
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  userId?: string;
  /**
   * E-Mail des handelnden Benutzers
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  userEmail?: string;
  /**
   * Rolle des handelnden Benutzers zur Zeit der Aktion
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  userRole?: CreateAuditLogDtoUserRoleEnum;
  /**
   * ID des Benutzers, der diese Aktion via Impersonation durchgeführt hat
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  impersonatedBy?: string;
  /**
   * Request-Korrelations-ID
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  requestId?: string;
  /**
   * Session-Identifier
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  sessionId?: string;
  /**
   * Client-IP-Adresse
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  ipAddress?: string;
  /**
   * Client User-Agent
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  userAgent?: string;
  /**
   * Aufgerufener API-Endpoint
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  endpoint?: string;
  /**
   * HTTP-Methode
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  httpMethod?: string;
  /**
   * Vorheriger Zustand (für Updates/Deletes)
   * @type {object}
   * @memberof CreateAuditLogDto
   */
  oldValues?: object;
  /**
   * Neuer Zustand (für Creates/Updates)
   * @type {object}
   * @memberof CreateAuditLogDto
   */
  newValues?: object;
  /**
   * Geänderte Felder
   * @type {Array<string>}
   * @memberof CreateAuditLogDto
   */
  affectedFields?: Array<string>;
  /**
   * Zusätzliche Kontext-Daten
   * @type {object}
   * @memberof CreateAuditLogDto
   */
  metadata?: object;
  /**
   * Dauer der Operation in Millisekunden
   * @type {number}
   * @memberof CreateAuditLogDto
   */
  duration?: number;
  /**
   * Ob die Operation erfolgreich war
   * @type {boolean}
   * @memberof CreateAuditLogDto
   */
  success?: boolean;
  /**
   * Fehlermeldung bei gescheiterten Operationen
   * @type {string}
   * @memberof CreateAuditLogDto
   */
  errorMessage?: string;
  /**
   * HTTP-Status-Code
   * @type {number}
   * @memberof CreateAuditLogDto
   */
  statusCode?: number;
  /**
   * Compliance-Tags
   * @type {Array<string>}
   * @memberof CreateAuditLogDto
   */
  compliance?: Array<string>;
  /**
   * Markiert, ob sensible Daten betroffen waren
   * @type {boolean}
   * @memberof CreateAuditLogDto
   */
  sensitiveData?: boolean;
  /**
   * Markiert, ob diese Aktion eine manuelle Überprüfung erfordert
   * @type {boolean}
   * @memberof CreateAuditLogDto
   */
  requiresReview?: boolean;
  /**
   * Aufbewahrungsdauer in Tagen
   * @type {number}
   * @memberof CreateAuditLogDto
   */
  retentionPeriod?: number;
}

/**
 * @export
 */
export const CreateAuditLogDtoActionTypeEnum = {
  Create: 'CREATE',
  Read: 'READ',
  Update: 'UPDATE',
  Delete: 'DELETE',
  Login: 'LOGIN',
  Logout: 'LOGOUT',
  PermissionChange: 'PERMISSION_CHANGE',
  RoleChange: 'ROLE_CHANGE',
  BulkOperation: 'BULK_OPERATION',
  SystemConfig: 'SYSTEM_CONFIG',
  Export: 'EXPORT',
  Import: 'IMPORT',
} as const;
export type CreateAuditLogDtoActionTypeEnum =
  (typeof CreateAuditLogDtoActionTypeEnum)[keyof typeof CreateAuditLogDtoActionTypeEnum];

/**
 * @export
 */
export const CreateAuditLogDtoSeverityEnum = {
  Low: 'LOW',
  Medium: 'MEDIUM',
  High: 'HIGH',
  Critical: 'CRITICAL',
} as const;
export type CreateAuditLogDtoSeverityEnum =
  (typeof CreateAuditLogDtoSeverityEnum)[keyof typeof CreateAuditLogDtoSeverityEnum];

/**
 * @export
 */
export const CreateAuditLogDtoUserRoleEnum = {
  SuperAdmin: 'SUPER_ADMIN',
  Admin: 'ADMIN',
  Manager: 'MANAGER',
  Support: 'SUPPORT',
  User: 'USER',
} as const;
export type CreateAuditLogDtoUserRoleEnum =
  (typeof CreateAuditLogDtoUserRoleEnum)[keyof typeof CreateAuditLogDtoUserRoleEnum];

/**
 * Check if a given object implements the CreateAuditLogDto interface.
 */
export function instanceOfCreateAuditLogDto(value: object): value is CreateAuditLogDto {
  if (!('actionType' in value) || value['actionType'] === undefined) return false;
  if (!('action' in value) || value['action'] === undefined) return false;
  if (!('resource' in value) || value['resource'] === undefined) return false;
  return true;
}

export function CreateAuditLogDtoFromJSON(json: any): CreateAuditLogDto {
  return CreateAuditLogDtoFromJSONTyped(json, false);
}

export function CreateAuditLogDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateAuditLogDto {
  if (json == null) {
    return json;
  }
  return {
    actionType: json['actionType'],
    severity: json['severity'] == null ? undefined : json['severity'],
    action: json['action'],
    resource: json['resource'],
    resourceId: json['resourceId'] == null ? undefined : json['resourceId'],
    userId: json['userId'] == null ? undefined : json['userId'],
    userEmail: json['userEmail'] == null ? undefined : json['userEmail'],
    userRole: json['userRole'] == null ? undefined : json['userRole'],
    impersonatedBy: json['impersonatedBy'] == null ? undefined : json['impersonatedBy'],
    requestId: json['requestId'] == null ? undefined : json['requestId'],
    sessionId: json['sessionId'] == null ? undefined : json['sessionId'],
    ipAddress: json['ipAddress'] == null ? undefined : json['ipAddress'],
    userAgent: json['userAgent'] == null ? undefined : json['userAgent'],
    endpoint: json['endpoint'] == null ? undefined : json['endpoint'],
    httpMethod: json['httpMethod'] == null ? undefined : json['httpMethod'],
    oldValues: json['oldValues'] == null ? undefined : json['oldValues'],
    newValues: json['newValues'] == null ? undefined : json['newValues'],
    affectedFields: json['affectedFields'] == null ? undefined : json['affectedFields'],
    metadata: json['metadata'] == null ? undefined : json['metadata'],
    duration: json['duration'] == null ? undefined : json['duration'],
    success: json['success'] == null ? undefined : json['success'],
    errorMessage: json['errorMessage'] == null ? undefined : json['errorMessage'],
    statusCode: json['statusCode'] == null ? undefined : json['statusCode'],
    compliance: json['compliance'] == null ? undefined : json['compliance'],
    sensitiveData: json['sensitiveData'] == null ? undefined : json['sensitiveData'],
    requiresReview: json['requiresReview'] == null ? undefined : json['requiresReview'],
    retentionPeriod: json['retentionPeriod'] == null ? undefined : json['retentionPeriod'],
  };
}

export function CreateAuditLogDtoToJSON(json: any): CreateAuditLogDto {
  return CreateAuditLogDtoToJSONTyped(json, false);
}

export function CreateAuditLogDtoToJSONTyped(
  value?: CreateAuditLogDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    actionType: value['actionType'],
    severity: value['severity'],
    action: value['action'],
    resource: value['resource'],
    resourceId: value['resourceId'],
    userId: value['userId'],
    userEmail: value['userEmail'],
    userRole: value['userRole'],
    impersonatedBy: value['impersonatedBy'],
    requestId: value['requestId'],
    sessionId: value['sessionId'],
    ipAddress: value['ipAddress'],
    userAgent: value['userAgent'],
    endpoint: value['endpoint'],
    httpMethod: value['httpMethod'],
    oldValues: value['oldValues'],
    newValues: value['newValues'],
    affectedFields: value['affectedFields'],
    metadata: value['metadata'],
    duration: value['duration'],
    success: value['success'],
    errorMessage: value['errorMessage'],
    statusCode: value['statusCode'],
    compliance: value['compliance'],
    sensitiveData: value['sensitiveData'],
    requiresReview: value['requiresReview'],
    retentionPeriod: value['retentionPeriod'],
  };
}
