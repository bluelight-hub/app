/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.12
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HealthControllerCheckV1200ResponseInfoValue } from './HealthControllerCheckV1200ResponseInfoValue';
import {
  HealthControllerCheckV1200ResponseInfoValueFromJSON,
  HealthControllerCheckV1200ResponseInfoValueToJSON,
} from './HealthControllerCheckV1200ResponseInfoValue';

/**
 *
 * @export
 * @interface HealthControllerCheckV1200Response
 */
export interface HealthControllerCheckV1200Response {
  /**
   *
   * @type {string}
   * @memberof HealthControllerCheckV1200Response
   */
  status?: string;
  /**
   *
   * @type {{ [key: string]: HealthControllerCheckV1200ResponseInfoValue; }}
   * @memberof HealthControllerCheckV1200Response
   */
  info?: { [key: string]: HealthControllerCheckV1200ResponseInfoValue } | null;
  /**
   *
   * @type {{ [key: string]: HealthControllerCheckV1200ResponseInfoValue; }}
   * @memberof HealthControllerCheckV1200Response
   */
  error?: { [key: string]: HealthControllerCheckV1200ResponseInfoValue } | null;
  /**
   *
   * @type {{ [key: string]: HealthControllerCheckV1200ResponseInfoValue; }}
   * @memberof HealthControllerCheckV1200Response
   */
  details?: { [key: string]: HealthControllerCheckV1200ResponseInfoValue };
}

/**
 * Check if a given object implements the HealthControllerCheckV1200Response interface.
 */
export function instanceOfHealthControllerCheckV1200Response(
  value: object,
): value is HealthControllerCheckV1200Response {
  return true;
}

export function HealthControllerCheckV1200ResponseFromJSON(
  json: any,
): HealthControllerCheckV1200Response {
  return HealthControllerCheckV1200ResponseFromJSONTyped(json, false);
}

export function HealthControllerCheckV1200ResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): HealthControllerCheckV1200Response {
  if (json == null) {
    return json;
  }
  return {
    status: json['status'] == null ? undefined : json['status'],
    info:
      json['info'] == null
        ? undefined
        : mapValues(json['info'], HealthControllerCheckV1200ResponseInfoValueFromJSON),
    error:
      json['error'] == null
        ? undefined
        : mapValues(json['error'], HealthControllerCheckV1200ResponseInfoValueFromJSON),
    details:
      json['details'] == null
        ? undefined
        : mapValues(json['details'], HealthControllerCheckV1200ResponseInfoValueFromJSON),
  };
}

export function HealthControllerCheckV1200ResponseToJSON(
  json: any,
): HealthControllerCheckV1200Response {
  return HealthControllerCheckV1200ResponseToJSONTyped(json, false);
}

export function HealthControllerCheckV1200ResponseToJSONTyped(
  value?: HealthControllerCheckV1200Response | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    status: value['status'],
    info:
      value['info'] == null
        ? undefined
        : mapValues(value['info'], HealthControllerCheckV1200ResponseInfoValueToJSON),
    error:
      value['error'] == null
        ? undefined
        : mapValues(value['error'], HealthControllerCheckV1200ResponseInfoValueToJSON),
    details:
      value['details'] == null
        ? undefined
        : mapValues(value['details'], HealthControllerCheckV1200ResponseInfoValueToJSON),
  };
}
