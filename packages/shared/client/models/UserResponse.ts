/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ApiMeta } from './ApiMeta';
import {
  ApiMetaFromJSON,
  ApiMetaFromJSONTyped,
  ApiMetaToJSON,
  ApiMetaToJSONTyped,
} from './ApiMeta';
import type { ApiPagination } from './ApiPagination';
import {
  ApiPaginationFromJSON,
  ApiPaginationFromJSONTyped,
  ApiPaginationToJSON,
  ApiPaginationToJSONTyped,
} from './ApiPagination';
import type { UserDto } from './UserDto';
import {
  UserDtoFromJSON,
  UserDtoFromJSONTyped,
  UserDtoToJSON,
  UserDtoToJSONTyped,
} from './UserDto';
import type { ApiLinks } from './ApiLinks';
import {
  ApiLinksFromJSON,
  ApiLinksFromJSONTyped,
  ApiLinksToJSON,
  ApiLinksToJSONTyped,
} from './ApiLinks';

/**
 *
 * @export
 * @interface UserResponse
 */
export interface UserResponse {
  /**
   * Metadaten zur Antwort
   * @type {ApiMeta}
   * @memberof UserResponse
   */
  meta: ApiMeta;
  /**
   * Optionale Nachricht
   * @type {string}
   * @memberof UserResponse
   */
  message?: string;
  /**
   * Paginierungs-Informationen
   * @type {ApiPagination}
   * @memberof UserResponse
   */
  pagination?: ApiPagination;
  /**
   * HATEOAS-Links
   * @type {ApiLinks}
   * @memberof UserResponse
   */
  links?: ApiLinks;
  /**
   * Benutzerdaten
   * @type {UserDto}
   * @memberof UserResponse
   */
  data: UserDto;
}

/**
 * Check if a given object implements the UserResponse interface.
 */
export function instanceOfUserResponse(value: object): value is UserResponse {
  if (!('meta' in value) || value['meta'] === undefined) return false;
  if (!('data' in value) || value['data'] === undefined) return false;
  return true;
}

export function UserResponseFromJSON(json: any): UserResponse {
  return UserResponseFromJSONTyped(json, false);
}

export function UserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResponse {
  if (json == null) {
    return json;
  }
  return {
    meta: ApiMetaFromJSON(json['meta']),
    message: json['message'] == null ? undefined : json['message'],
    pagination: json['pagination'] == null ? undefined : ApiPaginationFromJSON(json['pagination']),
    links: json['links'] == null ? undefined : ApiLinksFromJSON(json['links']),
    data: UserDtoFromJSON(json['data']),
  };
}

export function UserResponseToJSON(json: any): UserResponse {
  return UserResponseToJSONTyped(json, false);
}

export function UserResponseToJSONTyped(
  value?: UserResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    meta: ApiMetaToJSON(value['meta']),
    message: value['message'],
    pagination: ApiPaginationToJSON(value['pagination']),
    links: ApiLinksToJSON(value['links']),
    data: UserDtoToJSON(value['data']),
  };
}
