/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUser } from './SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUser';
import {
  SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUserFromJSON,
  SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUserFromJSONTyped,
  SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUserToJSON,
  SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUserToJSONTyped,
} from './SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUser';

/**
 *
 * @export
 * @interface SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
 */
export interface SecurityLogControllerGetSecurityLogsV1200ResponseDataInner {
  /**
   *
   * @type {string}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  eventType?: string;
  /**
   *
   * @type {string}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  severity?: string;
  /**
   *
   * @type {string}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  userId?: string | null;
  /**
   *
   * @type {string}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  ipAddress?: string | null;
  /**
   *
   * @type {string}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  userAgent?: string | null;
  /**
   *
   * @type {string}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  sessionId?: string | null;
  /**
   *
   * @type {object}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  metadata?: object | null;
  /**
   *
   * @type {string}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  message?: string | null;
  /**
   *
   * @type {number}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  sequenceNumber?: number;
  /**
   *
   * @type {Date}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  createdAt?: Date;
  /**
   *
   * @type {SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUser}
   * @memberof SecurityLogControllerGetSecurityLogsV1200ResponseDataInner
   */
  user?: SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUser | null;
}

/**
 * Check if a given object implements the SecurityLogControllerGetSecurityLogsV1200ResponseDataInner interface.
 */
export function instanceOfSecurityLogControllerGetSecurityLogsV1200ResponseDataInner(
  value: object,
): value is SecurityLogControllerGetSecurityLogsV1200ResponseDataInner {
  return true;
}

export function SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerFromJSON(
  json: any,
): SecurityLogControllerGetSecurityLogsV1200ResponseDataInner {
  return SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerFromJSONTyped(json, false);
}

export function SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SecurityLogControllerGetSecurityLogsV1200ResponseDataInner {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    eventType: json['eventType'] == null ? undefined : json['eventType'],
    severity: json['severity'] == null ? undefined : json['severity'],
    userId: json['userId'] == null ? undefined : json['userId'],
    ipAddress: json['ipAddress'] == null ? undefined : json['ipAddress'],
    userAgent: json['userAgent'] == null ? undefined : json['userAgent'],
    sessionId: json['sessionId'] == null ? undefined : json['sessionId'],
    metadata: json['metadata'] == null ? undefined : json['metadata'],
    message: json['message'] == null ? undefined : json['message'],
    sequenceNumber: json['sequenceNumber'] == null ? undefined : json['sequenceNumber'],
    createdAt: json['createdAt'] == null ? undefined : new Date(json['createdAt']),
    user:
      json['user'] == null
        ? undefined
        : SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUserFromJSON(json['user']),
  };
}

export function SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerToJSON(
  json: any,
): SecurityLogControllerGetSecurityLogsV1200ResponseDataInner {
  return SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerToJSONTyped(json, false);
}

export function SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerToJSONTyped(
  value?: SecurityLogControllerGetSecurityLogsV1200ResponseDataInner | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    eventType: value['eventType'],
    severity: value['severity'],
    userId: value['userId'],
    ipAddress: value['ipAddress'],
    userAgent: value['userAgent'],
    sessionId: value['sessionId'],
    metadata: value['metadata'],
    message: value['message'],
    sequenceNumber: value['sequenceNumber'],
    createdAt: value['createdAt'] == null ? undefined : value['createdAt'].toISOString(),
    user: SecurityLogControllerGetSecurityLogsV1200ResponseDataInnerUserToJSON(value['user']),
  };
}
