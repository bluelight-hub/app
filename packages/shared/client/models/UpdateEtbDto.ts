/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.18
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { EtbKategorie } from "./EtbKategorie";
import {
  EtbKategorieFromJSON,
  EtbKategorieFromJSONTyped,
  EtbKategorieToJSON,
  EtbKategorieToJSONTyped,
} from "./EtbKategorie";

/**
 *
 * @export
 * @interface UpdateEtbDto
 */
export interface UpdateEtbDto {
  /**
   * Zeitpunkt des tatsächlichen Ereignisses
   * @type {string}
   * @memberof UpdateEtbDto
   */
  timestampEreignis?: string;
  /**
   * Kategorie des Eintrags
   * @type {EtbKategorie}
   * @memberof UpdateEtbDto
   */
  kategorie?: EtbKategorie;
  /**
   * Optionaler Titel für den Eintrag
   * @type {string}
   * @memberof UpdateEtbDto
   */
  titel?: string;
  /**
   * Detaillierte Beschreibung des Ereignisses
   * @type {string}
   * @memberof UpdateEtbDto
   */
  beschreibung?: string;
  /**
   * Referenz zur Einsatz-ID
   * @type {string}
   * @memberof UpdateEtbDto
   */
  referenzEinsatzId?: string;
  /**
   * Referenz zur Patienten-ID
   * @type {string}
   * @memberof UpdateEtbDto
   */
  referenzPatientId?: string;
  /**
   * Referenz zur Einsatzmittel-ID
   * @type {string}
   * @memberof UpdateEtbDto
   */
  referenzEinsatzmittelId?: string;
  /**
   * Absender des Eintrags (OPTA-Nummer)
   * @type {string}
   * @memberof UpdateEtbDto
   */
  sender?: string;
  /**
   * Empfänger des Eintrags (OPTA-Nummer)
   * @type {string}
   * @memberof UpdateEtbDto
   */
  receiver?: string;
}

/**
 * Check if a given object implements the UpdateEtbDto interface.
 */
export function instanceOfUpdateEtbDto(value: object): value is UpdateEtbDto {
  return true;
}

export function UpdateEtbDtoFromJSON(json: any): UpdateEtbDto {
  return UpdateEtbDtoFromJSONTyped(json, false);
}

export function UpdateEtbDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UpdateEtbDto {
  if (json == null) {
    return json;
  }
  return {
    timestampEreignis:
      json["timestampEreignis"] == null ? undefined : json["timestampEreignis"],
    kategorie:
      json["kategorie"] == null
        ? undefined
        : EtbKategorieFromJSON(json["kategorie"]),
    titel: json["titel"] == null ? undefined : json["titel"],
    beschreibung:
      json["beschreibung"] == null ? undefined : json["beschreibung"],
    referenzEinsatzId:
      json["referenzEinsatzId"] == null ? undefined : json["referenzEinsatzId"],
    referenzPatientId:
      json["referenzPatientId"] == null ? undefined : json["referenzPatientId"],
    referenzEinsatzmittelId:
      json["referenzEinsatzmittelId"] == null
        ? undefined
        : json["referenzEinsatzmittelId"],
    sender: json["sender"] == null ? undefined : json["sender"],
    receiver: json["receiver"] == null ? undefined : json["receiver"],
  };
}

export function UpdateEtbDtoToJSON(json: any): UpdateEtbDto {
  return UpdateEtbDtoToJSONTyped(json, false);
}

export function UpdateEtbDtoToJSONTyped(
  value?: UpdateEtbDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    timestampEreignis: value["timestampEreignis"],
    kategorie: EtbKategorieToJSON(value["kategorie"]),
    titel: value["titel"],
    beschreibung: value["beschreibung"],
    referenzEinsatzId: value["referenzEinsatzId"],
    referenzPatientId: value["referenzPatientId"],
    referenzEinsatzmittelId: value["referenzEinsatzmittelId"],
    sender: value["sender"],
    receiver: value["receiver"],
  };
}
