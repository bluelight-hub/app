/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.20
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface EtbAttachment
 */
export interface EtbAttachment {
  /**
   * ID der Anlage
   * @type {string}
   * @memberof EtbAttachment
   */
  id: string;
  /**
   * ID des ETB-Eintrags
   * @type {string}
   * @memberof EtbAttachment
   */
  etbEntryId: string;
  /**
   * Dateiname der Anlage
   * @type {string}
   * @memberof EtbAttachment
   */
  dateiname: string;
  /**
   * Dateityp der Anlage
   * @type {string}
   * @memberof EtbAttachment
   */
  dateityp: string;
  /**
   * Speicherort der Anlage
   * @type {string}
   * @memberof EtbAttachment
   */
  speicherOrt: string;
  /**
   * Beschreibung der Anlage
   * @type {string}
   * @memberof EtbAttachment
   */
  beschreibung: string | null;
}

/**
 * Check if a given object implements the EtbAttachment interface.
 */
export function instanceOfEtbAttachment(value: object): value is EtbAttachment {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('etbEntryId' in value) || value['etbEntryId'] === undefined) return false;
  if (!('dateiname' in value) || value['dateiname'] === undefined) return false;
  if (!('dateityp' in value) || value['dateityp'] === undefined) return false;
  if (!('speicherOrt' in value) || value['speicherOrt'] === undefined) return false;
  if (!('beschreibung' in value) || value['beschreibung'] === undefined) return false;
  return true;
}

export function EtbAttachmentFromJSON(json: any): EtbAttachment {
  return EtbAttachmentFromJSONTyped(json, false);
}

export function EtbAttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): EtbAttachment {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    etbEntryId: json['etbEntryId'],
    dateiname: json['dateiname'],
    dateityp: json['dateityp'],
    speicherOrt: json['speicherOrt'],
    beschreibung: json['beschreibung'],
  };
}

export function EtbAttachmentToJSON(json: any): EtbAttachment {
  return EtbAttachmentToJSONTyped(json, false);
}

export function EtbAttachmentToJSONTyped(
  value?: EtbAttachment | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    etbEntryId: value['etbEntryId'],
    dateiname: value['dateiname'],
    dateityp: value['dateityp'],
    speicherOrt: value['speicherOrt'],
    beschreibung: value['beschreibung'],
  };
}
