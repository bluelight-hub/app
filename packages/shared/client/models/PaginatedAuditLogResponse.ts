/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PaginationMeta } from './PaginationMeta';
import {
  PaginationMetaFromJSON,
  PaginationMetaFromJSONTyped,
  PaginationMetaToJSON,
  PaginationMetaToJSONTyped,
} from './PaginationMeta';
import type { AuditLogEntity } from './AuditLogEntity';
import {
  AuditLogEntityFromJSON,
  AuditLogEntityFromJSONTyped,
  AuditLogEntityToJSON,
  AuditLogEntityToJSONTyped,
} from './AuditLogEntity';

/**
 *
 * @export
 * @interface PaginatedAuditLogResponse
 */
export interface PaginatedAuditLogResponse {
  /**
   * Liste der Audit-Log-Einträge für die aktuelle Seite
   * @type {Array<AuditLogEntity>}
   * @memberof PaginatedAuditLogResponse
   */
  items: Array<AuditLogEntity>;
  /**
   * Metadaten zur Paginierung mit Seiteninformationen
   * @type {PaginationMeta}
   * @memberof PaginatedAuditLogResponse
   */
  pagination: PaginationMeta;
}

/**
 * Check if a given object implements the PaginatedAuditLogResponse interface.
 */
export function instanceOfPaginatedAuditLogResponse(
  value: object,
): value is PaginatedAuditLogResponse {
  if (!('items' in value) || value['items'] === undefined) return false;
  if (!('pagination' in value) || value['pagination'] === undefined) return false;
  return true;
}

export function PaginatedAuditLogResponseFromJSON(json: any): PaginatedAuditLogResponse {
  return PaginatedAuditLogResponseFromJSONTyped(json, false);
}

export function PaginatedAuditLogResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PaginatedAuditLogResponse {
  if (json == null) {
    return json;
  }
  return {
    items: (json['items'] as Array<any>).map(AuditLogEntityFromJSON),
    pagination: PaginationMetaFromJSON(json['pagination']),
  };
}

export function PaginatedAuditLogResponseToJSON(json: any): PaginatedAuditLogResponse {
  return PaginatedAuditLogResponseToJSONTyped(json, false);
}

export function PaginatedAuditLogResponseToJSONTyped(
  value?: PaginatedAuditLogResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    items: (value['items'] as Array<any>).map(AuditLogEntityToJSON),
    pagination: PaginationMetaToJSON(value['pagination']),
  };
}
