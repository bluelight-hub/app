/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.15
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface ApiPagination
 */
export interface ApiPagination {
  /**
   * Aktuelle Seite
   * @type {number}
   * @memberof ApiPagination
   */
  page: number;
  /**
   * Anzahl der Elemente pro Seite
   * @type {number}
   * @memberof ApiPagination
   */
  limit: number;
  /**
   * Gesamtanzahl der Elemente
   * @type {number}
   * @memberof ApiPagination
   */
  total: number;
  /**
   * Gesamtanzahl der Seiten
   * @type {number}
   * @memberof ApiPagination
   */
  totalPages: number;
}

/**
 * Check if a given object implements the ApiPagination interface.
 */
export function instanceOfApiPagination(value: object): value is ApiPagination {
  if (!("page" in value) || value["page"] === undefined) return false;
  if (!("limit" in value) || value["limit"] === undefined) return false;
  if (!("total" in value) || value["total"] === undefined) return false;
  if (!("totalPages" in value) || value["totalPages"] === undefined)
    return false;
  return true;
}

export function ApiPaginationFromJSON(json: any): ApiPagination {
  return ApiPaginationFromJSONTyped(json, false);
}

export function ApiPaginationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ApiPagination {
  if (json == null) {
    return json;
  }
  return {
    page: json["page"],
    limit: json["limit"],
    total: json["total"],
    totalPages: json["totalPages"],
  };
}

export function ApiPaginationToJSON(json: any): ApiPagination {
  return ApiPaginationToJSONTyped(json, false);
}

export function ApiPaginationToJSONTyped(
  value?: ApiPagination | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    page: value["page"],
    limit: value["limit"],
    total: value["total"],
    totalPages: value["totalPages"],
  };
}
