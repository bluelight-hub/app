/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface RuleEvaluationResultDto
 */
export interface RuleEvaluationResultDto {
  /**
   * ID der evaluierten Regel
   * @type {string}
   * @memberof RuleEvaluationResultDto
   */
  ruleId: string;
  /**
   * Name der evaluierten Regel
   * @type {string}
   * @memberof RuleEvaluationResultDto
   */
  ruleName: string;
  /**
   * Ob die Regel einen Match gefunden hat
   * @type {boolean}
   * @memberof RuleEvaluationResultDto
   */
  matched: boolean;
  /**
   * Schweregrad der erkannten Bedrohung
   * @type {string}
   * @memberof RuleEvaluationResultDto
   */
  severity?: RuleEvaluationResultDtoSeverityEnum;
  /**
   * Risiko-Score (0-100)
   * @type {number}
   * @memberof RuleEvaluationResultDto
   */
  score?: number;
  /**
   * Grund für den Match
   * @type {string}
   * @memberof RuleEvaluationResultDto
   */
  reason?: string;
  /**
   * Beweise für den Match
   * @type {object}
   * @memberof RuleEvaluationResultDto
   */
  evidence?: object;
  /**
   * Vorgeschlagene Aktionen
   * @type {Array<string>}
   * @memberof RuleEvaluationResultDto
   */
  suggestedActions?: Array<string>;
  /**
   * Evaluierungszeitpunkt
   * @type {Date}
   * @memberof RuleEvaluationResultDto
   */
  evaluatedAt: Date;
  /**
   * Ausführungszeit der Regel in Millisekunden
   * @type {number}
   * @memberof RuleEvaluationResultDto
   */
  executionTime?: number;
}

/**
 * @export
 */
export const RuleEvaluationResultDtoSeverityEnum = {
  Low: 'LOW',
  Medium: 'MEDIUM',
  High: 'HIGH',
  Critical: 'CRITICAL',
} as const;
export type RuleEvaluationResultDtoSeverityEnum =
  (typeof RuleEvaluationResultDtoSeverityEnum)[keyof typeof RuleEvaluationResultDtoSeverityEnum];

/**
 * Check if a given object implements the RuleEvaluationResultDto interface.
 */
export function instanceOfRuleEvaluationResultDto(value: object): value is RuleEvaluationResultDto {
  if (!('ruleId' in value) || value['ruleId'] === undefined) return false;
  if (!('ruleName' in value) || value['ruleName'] === undefined) return false;
  if (!('matched' in value) || value['matched'] === undefined) return false;
  if (!('evaluatedAt' in value) || value['evaluatedAt'] === undefined) return false;
  return true;
}

export function RuleEvaluationResultDtoFromJSON(json: any): RuleEvaluationResultDto {
  return RuleEvaluationResultDtoFromJSONTyped(json, false);
}

export function RuleEvaluationResultDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RuleEvaluationResultDto {
  if (json == null) {
    return json;
  }
  return {
    ruleId: json['ruleId'],
    ruleName: json['ruleName'],
    matched: json['matched'],
    severity: json['severity'] == null ? undefined : json['severity'],
    score: json['score'] == null ? undefined : json['score'],
    reason: json['reason'] == null ? undefined : json['reason'],
    evidence: json['evidence'] == null ? undefined : json['evidence'],
    suggestedActions: json['suggestedActions'] == null ? undefined : json['suggestedActions'],
    evaluatedAt: new Date(json['evaluatedAt']),
    executionTime: json['executionTime'] == null ? undefined : json['executionTime'],
  };
}

export function RuleEvaluationResultDtoToJSON(json: any): RuleEvaluationResultDto {
  return RuleEvaluationResultDtoToJSONTyped(json, false);
}

export function RuleEvaluationResultDtoToJSONTyped(
  value?: RuleEvaluationResultDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    ruleId: value['ruleId'],
    ruleName: value['ruleName'],
    matched: value['matched'],
    severity: value['severity'],
    score: value['score'],
    reason: value['reason'],
    evidence: value['evidence'],
    suggestedActions: value['suggestedActions'],
    evaluatedAt: value['evaluatedAt'].toISOString(),
    executionTime: value['executionTime'],
  };
}
