/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserResponseDto } from './UserResponseDto';
import {
  UserResponseDtoFromJSON,
  UserResponseDtoFromJSONTyped,
  UserResponseDtoToJSON,
  UserResponseDtoToJSONTyped,
} from './UserResponseDto';

/**
 *
 * @export
 * @interface AuthCheckResponseDto
 */
export interface AuthCheckResponseDto {
  /**
   * Der authentifizierte Benutzer oder null wenn nicht eingeloggt
   * @type {UserResponseDto}
   * @memberof AuthCheckResponseDto
   */
  user?: UserResponseDto | null;
  /**
   * Ob ein Benutzer authentifiziert ist
   * @type {boolean}
   * @memberof AuthCheckResponseDto
   */
  authenticated: boolean;
}

/**
 * Check if a given object implements the AuthCheckResponseDto interface.
 */
export function instanceOfAuthCheckResponseDto(value: object): value is AuthCheckResponseDto {
  if (!('authenticated' in value) || value['authenticated'] === undefined) return false;
  return true;
}

export function AuthCheckResponseDtoFromJSON(json: any): AuthCheckResponseDto {
  return AuthCheckResponseDtoFromJSONTyped(json, false);
}

export function AuthCheckResponseDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AuthCheckResponseDto {
  if (json == null) {
    return json;
  }
  return {
    user: json['user'] == null ? undefined : UserResponseDtoFromJSON(json['user']),
    authenticated: json['authenticated'],
  };
}

export function AuthCheckResponseDtoToJSON(json: any): AuthCheckResponseDto {
  return AuthCheckResponseDtoToJSONTyped(json, false);
}

export function AuthCheckResponseDtoToJSONTyped(
  value?: AuthCheckResponseDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    user: UserResponseDtoToJSON(value['user']),
    authenticated: value['authenticated'],
  };
}
