/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface WebAuthnRegistrationCompleteDto
 */
export interface WebAuthnRegistrationCompleteDto {
  /**
   * WebAuthn registration response from client
   * @type {object}
   * @memberof WebAuthnRegistrationCompleteDto
   */
  response: object;
  /**
   * Challenge from registration start
   * @type {string}
   * @memberof WebAuthnRegistrationCompleteDto
   */
  challenge: string;
  /**
   * User-friendly name for the device
   * @type {string}
   * @memberof WebAuthnRegistrationCompleteDto
   */
  deviceName?: string;
}

/**
 * Check if a given object implements the WebAuthnRegistrationCompleteDto interface.
 */
export function instanceOfWebAuthnRegistrationCompleteDto(
  value: object,
): value is WebAuthnRegistrationCompleteDto {
  if (!('response' in value) || value['response'] === undefined) return false;
  if (!('challenge' in value) || value['challenge'] === undefined) return false;
  return true;
}

export function WebAuthnRegistrationCompleteDtoFromJSON(
  json: any,
): WebAuthnRegistrationCompleteDto {
  return WebAuthnRegistrationCompleteDtoFromJSONTyped(json, false);
}

export function WebAuthnRegistrationCompleteDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WebAuthnRegistrationCompleteDto {
  if (json == null) {
    return json;
  }
  return {
    response: json['response'],
    challenge: json['challenge'],
    deviceName: json['deviceName'] == null ? undefined : json['deviceName'],
  };
}

export function WebAuthnRegistrationCompleteDtoToJSON(json: any): WebAuthnRegistrationCompleteDto {
  return WebAuthnRegistrationCompleteDtoToJSONTyped(json, false);
}

export function WebAuthnRegistrationCompleteDtoToJSONTyped(
  value?: WebAuthnRegistrationCompleteDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    response: value['response'],
    challenge: value['challenge'],
    deviceName: value['deviceName'],
  };
}
