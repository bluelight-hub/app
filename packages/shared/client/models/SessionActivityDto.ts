/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 *
 * @export
 * @interface SessionActivityDto
 */
export interface SessionActivityDto {
  /**
   * Eindeutige Aktivitäts-ID
   * @type {string}
   * @memberof SessionActivityDto
   */
  id: string;
  /**
   * Zugehörige Session-ID
   * @type {string}
   * @memberof SessionActivityDto
   */
  sessionId: string;
  /**
   * Zeitstempel der Aktivität
   * @type {Date}
   * @memberof SessionActivityDto
   */
  timestamp: Date;
  /**
   * Art der Aktivität
   * @type {string}
   * @memberof SessionActivityDto
   */
  activityType: SessionActivityDtoActivityTypeEnum;
  /**
   * Betroffene Ressource
   * @type {string}
   * @memberof SessionActivityDto
   */
  resource?: string;
  /**
   * HTTP-Methode (bei API-Calls)
   * @type {string}
   * @memberof SessionActivityDto
   */
  method?: string;
  /**
   * HTTP-Statuscode der Antwort
   * @type {number}
   * @memberof SessionActivityDto
   */
  statusCode?: number;
  /**
   * Dauer der Operation in Millisekunden
   * @type {number}
   * @memberof SessionActivityDto
   */
  duration?: number;
  /**
   * IP-Adresse zum Zeitpunkt der Aktivität
   * @type {string}
   * @memberof SessionActivityDto
   */
  ipAddress?: string;
  /**
   * Zusätzliche Metadaten zur Aktivität
   * @type {object}
   * @memberof SessionActivityDto
   */
  metadata?: object;
}

/**
 * @export
 */
export const SessionActivityDtoActivityTypeEnum = {
  Login: 'login',
  Logout: 'logout',
  PageView: 'page_view',
  ApiCall: 'api_call',
  DataAccess: 'data_access',
  DataModification: 'data_modification',
  SecurityEvent: 'security_event',
} as const;
export type SessionActivityDtoActivityTypeEnum =
  (typeof SessionActivityDtoActivityTypeEnum)[keyof typeof SessionActivityDtoActivityTypeEnum];

/**
 * Check if a given object implements the SessionActivityDto interface.
 */
export function instanceOfSessionActivityDto(value: object): value is SessionActivityDto {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('sessionId' in value) || value['sessionId'] === undefined) return false;
  if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
  if (!('activityType' in value) || value['activityType'] === undefined) return false;
  return true;
}

export function SessionActivityDtoFromJSON(json: any): SessionActivityDto {
  return SessionActivityDtoFromJSONTyped(json, false);
}

export function SessionActivityDtoFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): SessionActivityDto {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    sessionId: json['sessionId'],
    timestamp: new Date(json['timestamp']),
    activityType: json['activityType'],
    resource: json['resource'] == null ? undefined : json['resource'],
    method: json['method'] == null ? undefined : json['method'],
    statusCode: json['statusCode'] == null ? undefined : json['statusCode'],
    duration: json['duration'] == null ? undefined : json['duration'],
    ipAddress: json['ipAddress'] == null ? undefined : json['ipAddress'],
    metadata: json['metadata'] == null ? undefined : json['metadata'],
  };
}

export function SessionActivityDtoToJSON(json: any): SessionActivityDto {
  return SessionActivityDtoToJSONTyped(json, false);
}

export function SessionActivityDtoToJSONTyped(
  value?: SessionActivityDto | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    sessionId: value['sessionId'],
    timestamp: value['timestamp'].toISOString(),
    activityType: value['activityType'],
    resource: value['resource'],
    method: value['method'],
    statusCode: value['statusCode'],
    duration: value['duration'],
    ipAddress: value['ipAddress'],
    metadata: value['metadata'],
  };
}
