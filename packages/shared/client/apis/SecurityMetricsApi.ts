/* tslint:disable */
/* eslint-disable */
/**
 * BlueLight Hub API
 * BlueLight Hub API for the BlueLight Hub application
 *
 * The version of the OpenAPI document: 1.0.0-alpha.21
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { SecurityMetricsControllerGetExtendedMetricsV1200Response } from '../models/index';
import {
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseFromJSON,
  SecurityMetricsControllerGetExtendedMetricsV1200ResponseToJSON,
} from '../models/index';

/**
 *
 */
export class SecurityMetricsApi extends runtime.BaseAPI {
  /**
   * Retrieve detailed metrics including database and queue statistics
   * Get extended security metrics
   */
  async securityMetricsControllerGetExtendedMetricsV1Raw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<SecurityMetricsControllerGetExtendedMetricsV1200Response>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    if (this.configuration && this.configuration.accessToken) {
      const token = this.configuration.accessToken;
      const tokenString = await token('bearer', []);

      if (tokenString) {
        headerParameters['Authorization'] = `Bearer ${tokenString}`;
      }
    }
    const response = await this.request(
      {
        path: `/v1/api/metrics/security-logs/extended`,
        method: 'GET',
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      SecurityMetricsControllerGetExtendedMetricsV1200ResponseFromJSON(jsonValue),
    );
  }

  /**
   * Retrieve detailed metrics including database and queue statistics
   * Get extended security metrics
   */
  async securityMetricsControllerGetExtendedMetricsV1(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<SecurityMetricsControllerGetExtendedMetricsV1200Response> {
    const response = await this.securityMetricsControllerGetExtendedMetricsV1Raw(initOverrides);
    return await response.value();
  }
}
