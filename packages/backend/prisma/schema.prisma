// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}

model User {
  id               String    @id @default(nanoid())
  username         String    @unique @db.VarChar(100)
  passwordHash     String?   @db.Text // only admin users have a password
  role             UserRole  @default(USER)
  isActive         Boolean   @default(true)
  lastLoginAt      DateTime?
  failedLoginCount Int       @default(0)
  lockedUntil      DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  createdBy        String?

  // Relations
  creator      User?  @relation("UserCreatedBy", fields: [createdBy], references: [id])
  createdUsers User[] @relation("UserCreatedBy")
  // sessions        Session[]
  // refreshTokens   RefreshToken[]
  // rolePermissions RolePermission[]
  // loginAttempts   LoginAttempt[]
  // securityLogs    SecurityLog[]

  // Indexes
  @@index([username], map: "idx_user_username")
  @@index([role, isActive], map: "idx_user_role_active")
  @@index([lastLoginAt], map: "idx_user_last_login")
  @@index([createdBy], map: "idx_user_created_by")
}
